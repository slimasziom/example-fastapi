name: Build and Deploy Code

on: 
  push:
    branches: 
      - "main"
      - "feature/test"
      - "master"
  
  pull_request:
    branches: ["devel", "master"]

# Accessible to all jobs
# env:
#   DATABASE_HOSTNAME: localhost

jobs:
  build:
    environment:
      name: testing
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_PWD: ${{ secrets.DB_PWD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DB_PWD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Say hi to kris
        run: echo "Hi Kris!"
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest -v -s
      
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      # - name: Set up docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache

      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}


  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production

    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      # - name: deploying to Heroku
      #   uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
      #   with:
      #     heroku_api_key: ${{secrets.HEROKU_API_KEY}}
      #     heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
      #     heroku_email: ${{secrets.HEROKU_EMAIL}}
        
      - name: deploy to ubuntu server (digitalocean)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          password: ${{ secrets.PROD_PASSWORD }}
          script: |
            cd app/src
            git pull
            sudo systemctl restart api


